#!/usr/bin/env ruby

require 'optparse'
require 'methadone'
require 'textractor/cli.rb'
require 'rest-client'
require 'json'

class App
  include Methadone::Main
  include Methadone::CLILogging

  main do # Add args you want: |like,so|
    url = ENV['API_BASE_URL'] + '/textract'
    payload = {}
    Dir['**/*.erb'].each do |f|
      payload[f] = File.read(f)
    end
    result = RestClient.post(url, payload.to_json, headers={})

    locale_file = 'config/locales/en.yml' 
    locale = YAML.load_file(locale_file)
    locale['en'] ||= {}
    
    JSON.parse(result).each do |k,v|
      raise "unexpected path \"#{k} in result!" unless payload.keys.include?(k)
      File.write(k, v["result"])
      key = k.sub('app/views/','').sub(/(\.html)?\.erb/,'').split('/')

      tmp = locale['en']
      key.each do |part|
        tmp[part] ||= {}
        tmp = tmp[part]
      end
      v["locale"].each {|kk,vv| tmp[kk] = vv }
    end
    File.write(locale_file, YAML.dump(locale))
  end

  # supplemental methods here

  # Declare command-line interface here

  # description "one line description of your app"
  #
  # Accept flags via:
  # on("--flag VAL","Some flag")
  # options[flag] will contain VAL
  #
  # Specify switches via:
  # on("--[no-]switch","Some switch")
  #
  # Or, just call OptionParser methods on opts
  #
  # Require an argument
  # arg :some_arg 
  #
  # # Make an argument optional
  # arg :optional_arg, :optional

  version Textractor::Cli::VERSION

  use_log_level_option :toggle_debug_on_signal => 'USR1'

  go!
end
